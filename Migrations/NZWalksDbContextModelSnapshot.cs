// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    partial class NZWalksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d09f585f-8792-49f5-9401-d8a03d1dc379"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("7b2a2ef9-4f0f-4685-91b8-00b27251c609"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("540f0e75-ffc1-42b2-bda0-d8bac6ca0367"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d0e7a41-91f1-4aea-99f5-b7182d858c87"),
                            Code = "AKL",
                            Name = "Aukland",
                            RegionImageUrl = "https://tse4.mm.bing.net/th?id=OIP.GbvnlvwTocdjfHI6sCfzcgHaE8&pid=Api&P=0&h=180.jpg"
                        },
                        new
                        {
                            Id = new Guid("b05d04d2-2f6e-43d2-bbcd-0ec2db15bdc0"),
                            Code = "WDL",
                            Name = "Welligton",
                            RegionImageUrl = "https://mediaim.expedia.com/destination/1/e34399c39d76167d8fead4e03a9efd2f.jpg"
                        },
                        new
                        {
                            Id = new Guid("cc654047-0e86-4f39-95fd-433d794192ae"),
                            Code = "BPL",
                            Name = "Bay Of Plenty",
                            RegionImageUrl = "https://tse4.mm.bing.net/th?id=OIP.4OOoGfJ50A-r_b5MWsgi0gHaE8&pid=Api&P=0&h=180.jpg"
                        },
                        new
                        {
                            Id = new Guid("b6f3a6f0-5226-4ff9-b2a0-14fb89f749cb"),
                            Code = "STL",
                            Name = "SouthLand",
                            RegionImageUrl = "http://www.lasty.com.pl/region/large/1/RAUNZ/region-auckland.JPG"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
